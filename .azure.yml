variables:
  PATH_SERVER: 'uit.hotel'
  PATH_SERVER_TEST: 'uit.hotel.test'
  PATH_CLIENT: 'uit.hotel.client'

  NUGET_PACKAGES: $(Pipeline.Workspace)/.nuget/packages
  YARN_CACHE_FOLDER: $(Pipeline.Workspace)/.yarn
  NODE_CACHE_FOLDER: $(System.DefaultWorkingDirectory)/$(PATH_CLIENT)/node_modules

jobs:
  - job: DotNetCore
    pool:
      vmImage: 'ubuntu-latest'
    steps:
      - task: Cache@2
        inputs:
          key: nuget | $(Agent.OS) | .azure.yml
          path: $(NUGET_PACKAGES)
          restoreKeys: |
            nuget | $(Agent.OS)
        displayName: '[Cache] Cache Nuget packages'

      - script: dotnet --info
        displayName: '[Server] Run `dotnet --info`'

      - script: dotnet restore
        condition: ne(variables.CACHE_RESTORED, 'true')
        displayName: '[Server] Run `dotnet restore`'

      - script: dotnet build --no-restore
        displayName: '[Server] Run `dotnet build`'

      - script: dotnet test --no-build
        displayName: '[Server] Run `dotnet test`'

  - job: NodeJS
    pool:
      vmImage: 'ubuntu-latest'
    steps:
      - task: Cache@2
        inputs:
          key: yarn | $(Agent.OS) | $(PATH_CLIENT)/yarn.lock | .azure.yml
          path: $(YARN_CACHE_FOLDER)
          restoreKeys: |
            yarn | $(Agent.OS)
        displayName: '[Cache] Cache Yarn packages'

      - task: Cache@2
        inputs:
          key: node | $(Agent.OS) | $(PATH_CLIENT)/yarn.lock | .azure.yml
          path: $(NODE_CACHE_FOLDER)
        displayName: Cache Node Modules

      - task: UseNode@1
        inputs:
          version: '12.x'
          checkLatest: true
        displayName: '[Client] Install NodeJS'

      - script: |
          cd $(PATH_CLIENT)
          yarn
          yarn cache list
        condition: ne(variables['CacheRestored'], 'true')
        displayName: '[Client] Run `yarn install`'

      - script: |
          cd $(PATH_CLIENT)
          yarn lint:js --max-warnings=0
        displayName: '[Client] Run `yarn lint:js`'

      - script: |
          cd $(PATH_CLIENT)
          yarn lint:css
        displayName: '[Client] Run `yarn lint:css`'

      - script: |
          cd $(PATH_CLIENT)
          yarn build
        displayName: '[Client] Run `yarn build`'

      - script: |
          cd $(PATH_CLIENT)
          yarn test
        displayName: '[Client] Run `yarn test`'
